name: Release Package

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  process_changeset:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: asdf setup
        uses: asdf-vm/actions/setup@v1.1.0
      - name: asdf install
        run: |
          set -x
          asdf plugin add pnpm
          asdf plugin add nodejs
          asdf plugin add just https://github.com/heliumbrain/asdf-just
          asdf install

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "::set-output name=dir::$(pnpm store path)"

      - name: Cache node modules
        id: pnpm-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: pnpm install
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: just nx package vscode-graphiql

      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        if: steps.changesets.outputs.hasChangesets == 'false'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            dist/apps/graphiql-extension/LICENSE.txt
            dist/apps/graphiql-extension/*.vsix
